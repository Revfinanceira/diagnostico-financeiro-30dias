<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aula 3: Sistema de 3 Contas - Revolução Financeira em 30 Dias</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 40px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            font-weight: 700;
        }

        .header p {
            font-size: 1.2em;
            opacity: 0.95;
        }

        .progress-container {
            background: #f8f9fa;
            padding: 20px 40px;
            border-bottom: 2px solid #e9ecef;
        }

        .progress-bar {
            display: flex;
            justify-content: space-between;
            position: relative;
            margin-bottom: 10px;
        }

        .progress-line {
            position: absolute;
            top: 20px;
            left: 0;
            right: 0;
            height: 4px;
            background: #e9ecef;
            z-index: 1;
        }

        .progress-line-fill {
            height: 100%;
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
            transition: width 0.3s ease;
            width: 0%;
        }

        .progress-step {
            position: relative;
            z-index: 2;
            text-align: center;
            flex: 1;
        }

        .progress-circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: white;
            border: 4px solid #e9ecef;
            margin: 0 auto 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: #adb5bd;
            transition: all 0.3s ease;
        }

        .progress-step.active .progress-circle {
            border-color: #667eea;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            transform: scale(1.1);
        }

        .progress-step.completed .progress-circle {
            border-color: #28a745;
            background: #28a745;
            color: white;
        }

        .progress-label {
            font-size: 0.85em;
            color: #6c757d;
            font-weight: 500;
        }

        .progress-step.active .progress-label {
            color: #667eea;
            font-weight: 600;
        }

        .content {
            padding: 40px;
        }

        .step {
            display: none;
        }

        .step.active {
            display: block;
            animation: fadeIn 0.5s ease;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .step-title {
            font-size: 2em;
            color: #2d3748;
            margin-bottom: 10px;
            font-weight: 700;
        }

        .step-description {
            color: #718096;
            margin-bottom: 30px;
            font-size: 1.1em;
            line-height: 1.6;
        }

        .section {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 25px;
        }

        .section-title {
            font-size: 1.3em;
            color: #667eea;
            margin-bottom: 15px;
            font-weight: 600;
        }

        .info-box {
            background: #e0e7ff;
            border-left: 4px solid #667eea;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .info-box p {
            color: #4c51bf;
            margin: 5px 0;
            line-height: 1.6;
        }

        .info-box strong {
            color: #667eea;
        }

        input[type="text"],
        input[type="number"],
        select {
            width: 100%;
            padding: 12px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 1em;
            transition: all 0.3s ease;
            font-family: inherit;
        }

        input[type="text"]:focus,
        input[type="number"]:focus,
        select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #4a5568;
            font-weight: 600;
            font-size: 0.95em;
        }

        .input-group {
            margin-bottom: 20px;
        }

        .account-item {
            background: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 15px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            position: relative;
        }

        .remove-button {
            background: #ef4444;
            color: white;
            border: none;
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 0.9em;
            cursor: pointer;
            position: absolute;
            top: 15px;
            right: 15px;
        }

        .remove-button:hover {
            background: #dc2626;
        }

        .add-button {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-size: 1em;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .add-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 16px rgba(102, 126, 234, 0.3);
        }

        .navigation {
            display: flex;
            justify-content: space-between;
            margin-top: 40px;
            gap: 15px;
        }

        .nav-button {
            padding: 15px 30px;
            border: none;
            border-radius: 8px;
            font-size: 1.1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            flex: 1;
        }

        .nav-button.primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .nav-button.primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
        }

        .nav-button.secondary {
            background: white;
            color: #667eea;
            border: 2px solid #667eea;
        }

        .nav-button.secondary:hover {
            background: #f0f4ff;
        }

        .accounts-visual {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }

        .account-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            text-align: center;
            border: 3px solid;
            position: relative;
            overflow: hidden;
        }

        .account-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 5px;
        }

        .account-card.essenciais {
            border-color: #3b82f6;
        }

        .account-card.essenciais::before {
            background: #3b82f6;
        }

        .account-card.liberdade {
            border-color: #10b981;
        }

        .account-card.liberdade::before {
            background: #10b981;
        }

        .account-card.sonhos {
            border-color: #f59e0b;
        }

        .account-card.sonhos::before {
            background: #f59e0b;
        }

        .account-icon {
            font-size: 3em;
            margin-bottom: 15px;
        }

        .account-name {
            font-size: 1.4em;
            font-weight: 700;
            color: #2d3748;
            margin-bottom: 10px;
        }

        .account-percentage {
            font-size: 2.5em;
            font-weight: 700;
            margin: 15px 0;
        }

        .account-card.essenciais .account-percentage {
            color: #3b82f6;
        }

        .account-card.liberdade .account-percentage {
            color: #10b981;
        }

        .account-card.sonhos .account-percentage {
            color: #f59e0b;
        }

        .account-value {
            font-size: 1.2em;
            color: #718096;
            margin-top: 10px;
        }

        .account-description {
            color: #718096;
            font-size: 0.9em;
            margin-top: 15px;
            line-height: 1.5;
        }

        .flow-diagram {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin: 30px 0;
        }

        .flow-row {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin: 20px 0;
            gap: 15px;
        }

        .flow-box {
            flex: 1;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            padding: 20px;
            border-radius: 12px;
            text-align: center;
            border-left: 4px solid #667eea;
        }

        .flow-arrow {
            font-size: 2em;
            color: #667eea;
        }

        .percentage-slider {
            margin: 20px 0;
        }

        .slider-container {
            display: flex;
            align-items: center;
            gap: 15px;
            margin: 15px 0;
        }

        .slider-container input[type="range"] {
            flex: 1;
            height: 8px;
            border-radius: 5px;
            background: #e2e8f0;
            outline: none;
        }

        .slider-container input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #667eea;
            cursor: pointer;
        }

        .slider-container input[type="range"]::-moz-range-thumb {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #667eea;
            cursor: pointer;
            border: none;
        }

        .slider-value {
            font-size: 1.2em;
            font-weight: 700;
            color: #667eea;
            min-width: 60px;
            text-align: center;
        }

        .warning-box {
            background: #fef3c7;
            border-left: 4px solid #f59e0b;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
        }

        .warning-box p {
            color: #92400e;
            margin: 5px 0;
        }

        .success-box {
            background: #d1fae5;
            border-left: 4px solid #10b981;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
        }

        .success-box p {
            color: #065f46;
            margin: 5px 0;
        }

        .download-section {
            text-align: center;
            margin-top: 40px;
            padding: 30px;
            background: #f8f9fa;
            border-radius: 12px;
        }

        .download-button {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 18px 40px;
            border-radius: 8px;
            font-size: 1.2em;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 10px;
        }

        .download-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
        }

        /* Estilos para impressão */
        .print-view {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: white;
            z-index: 9999;
            overflow-y: auto;
            padding: 40px;
        }

        .print-view.active {
            display: block !important;
        }

        .print-content {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            padding: 40px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
        }

        .print-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
            border-radius: 12px;
            margin-bottom: 30px;
        }

        .print-buttons {
            position: fixed;
            top: 20px;
            right: 20px;
            display: flex;
            gap: 10px;
            z-index: 10000;
        }
        
        .print-view:not(.active) .print-buttons {
            display: none;
        }
        
        .print-view.active .print-buttons {
            display: flex !important;
        }

        .print-btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .print-btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .print-btn-secondary {
            background: white;
            color: #667eea;
            border: 2px solid #667eea;
        }

        .print-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        }

        @media print {
            .print-buttons {
                display: none !important;
            }
            
            .print-content {
                box-shadow: none;
                padding: 0;
            }
            
            .print-view {
                padding: 0;
            }
        }

        @media (max-width: 768px) {
            .header h1 {
                font-size: 1.8em;
            }

            .content {
                padding: 20px;
            }

            .accounts-visual {
                grid-template-columns: 1fr;
            }

            .flow-row {
                flex-direction: column;
            }

            .flow-arrow {
                transform: rotate(90deg);
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🏦 Aula 3: Sistema de 3 Contas</h1>
            <p>Configure sua arquitetura financeira para o sucesso automático</p>
        </div>

        <div class="progress-container">
            <div class="progress-bar">
                <div class="progress-line">
                    <div class="progress-line-fill" id="progressFill"></div>
                </div>
                <div class="progress-step active" data-step="1">
                    <div class="progress-circle">1</div>
                    <div class="progress-label">Inventário</div>
                </div>
                <div class="progress-step" data-step="2">
                    <div class="progress-circle">2</div>
                    <div class="progress-label">Renda</div>
                </div>
                <div class="progress-step" data-step="3">
                    <div class="progress-circle">3</div>
                    <div class="progress-label">Percentuais</div>
                </div>
                <div class="progress-step" data-step="4">
                    <div class="progress-circle">4</div>
                    <div class="progress-label">Configuração</div>
                </div>
            </div>
        </div>

        <div class="content">
            <!-- PASSO 1: INVENTÁRIO DE CONTAS -->
            <div class="step active" id="step1">
                <h2 class="step-title">📋 Passo 1: Inventário de Contas Atuais</h2>
                <p class="step-description">Antes de configurar o sistema, vamos mapear suas contas bancárias existentes.</p>

                <div class="info-box">
                    <p><strong>💡 Importante:</strong> Liste todas as contas que você possui, mesmo que não use regularmente. Isso nos ajudará a aproveitar o que você já tem.</p>
                </div>

                <div class="section">
                    <div class="section-title">Suas Contas Bancárias</div>
                    <div id="accountsContainer"></div>
                    <button class="add-button" onclick="addAccount()">
                        ➕ Adicionar Conta
                    </button>
                </div>

                <div class="navigation">
                    <button class="nav-button primary" onclick="nextStep()">
                        Próximo: Definir Renda →
                    </button>
                </div>
            </div>

            <!-- PASSO 2: RENDA MENSAL -->
            <div class="step" id="step2">
                <h2 class="step-title">💰 Passo 2: Definir Renda Mensal</h2>
                <p class="step-description">Informe sua renda mensal total para calcularmos os valores de cada conta.</p>

                <div class="info-box">
                    <p><strong>💡 Dica:</strong> Considere apenas a renda líquida (o que você realmente recebe). Se sua renda varia, use uma média dos últimos 3-6 meses.</p>
                </div>

                <div class="section">
                    <div class="input-group">
                        <label for="monthlyIncome">Renda Mensal Líquida (R$)</label>
                        <input type="number" id="monthlyIncome" placeholder="5000" min="0" step="100" onchange="calculateValues()">
                    </div>

                    <div id="incomeWarning"></div>
                </div>

                <div class="navigation">
                    <button class="nav-button secondary" onclick="prevStep()">
                        ← Voltar
                    </button>
                    <button class="nav-button primary" onclick="nextStep()">
                        Próximo: Definir Percentuais →
                    </button>
                </div>
            </div>

            <!-- PASSO 3: PERCENTUAIS -->
            <div class="step" id="step3">
                <h2 class="step-title">📊 Passo 3: Ajustar Percentuais</h2>
                <p class="step-description">Configure a distribuição da sua renda entre as 3 contas. Recomendamos começar com 50/30/20.</p>

                <div class="info-box">
                    <p><strong>💡 Regra 50/30/20:</strong></p>
                    <p>• <strong>50%</strong> para Essenciais (despesas fixas e compromissos)</p>
                    <p>• <strong>30%</strong> para Liberdade (gastos variáveis e lazer)</p>
                    <p>• <strong>20%</strong> para Sonhos (investimentos e objetivos)</p>
                </div>

                <div class="warning-box" style="margin-bottom: 20px;">
                    <p><strong>⚠️ Começando do zero?</strong> Se você nunca investiu, comece com 5-10% para Sonhos e aumente gradualmente até chegar aos 20%.</p>
                </div>

                <div class="section">
                    <div class="percentage-slider">
                        <div class="slider-container">
                            <label style="min-width: 120px; margin-bottom: 0;">🏠 Essenciais:</label>
                            <input type="range" id="essenciaisSlider" min="30" max="70" value="50" oninput="updatePercentages()">
                            <span class="slider-value" id="essenciaisValue">50%</span>
                        </div>

                        <div class="slider-container">
                            <label style="min-width: 120px; margin-bottom: 0;">🎉 Liberdade:</label>
                            <input type="range" id="liberdadeSlider" min="10" max="50" value="30" oninput="updatePercentages()">
                            <span class="slider-value" id="liberdadeValue">30%</span>
                        </div>

                        <div class="slider-container">
                            <label style="min-width: 120px; margin-bottom: 0;">🎯 Sonhos:</label>
                            <input type="range" id="sonhosSlider" min="5" max="40" value="20" oninput="updatePercentages()">
                            <span class="slider-value" id="sonhosValue">20%</span>
                        </div>
                    </div>

                    <div id="percentageWarning"></div>
                </div>

                <div class="accounts-visual" id="accountsVisual">
                    <!-- Será preenchido dinamicamente -->
                </div>

                <div class="navigation">
                    <button class="nav-button secondary" onclick="prevStep()">
                        ← Voltar
                    </button>
                    <button class="nav-button primary" onclick="nextStep()">
                        Próximo: Configurar Sistema →
                    </button>
                </div>
            </div>

            <!-- PASSO 4: CONFIGURAÇÃO FINAL -->
            <div class="step" id="step4">
                <h2 class="step-title">⚙️ Passo 4: Configuração Final do Sistema</h2>
                <p class="step-description">Agora vamos atribuir suas contas reais ao Sistema de 3 Contas e visualizar o fluxo automático.</p>

                <div class="section">
                    <div class="section-title">Atribuição de Contas</div>
                    
                    <div class="input-group">
                        <label for="contaEssenciais">🏠 Conta Essenciais</label>
                        <select id="contaEssenciais" onchange="saveConfiguration()">
                            <option value="">Selecione uma conta...</option>
                        </select>
                    </div>

                    <div class="input-group">
                        <label for="contaLiberdade">🎉 Conta Liberdade</label>
                        <select id="contaLiberdade" onchange="saveConfiguration()">
                            <option value="">Selecione uma conta...</option>
                        </select>
                    </div>

                    <div class="input-group">
                        <label for="contaSonhos">🎯 Conta Sonhos</label>
                        <select id="contaSonhos" onchange="saveConfiguration()">
                            <option value="">Selecione uma conta...</option>
                        </select>
                    </div>
                </div>

                <div class="section">
                    <div class="section-title">Fluxo Automático do Seu Dinheiro</div>
                    
                    <div class="flow-diagram">
                        <div class="flow-row">
                            <div class="flow-box">
                                <div style="font-size: 2em; margin-bottom: 10px;">💵</div>
                                <div style="font-weight: 700; font-size: 1.2em; margin-bottom: 5px;">Renda Recebida</div>
                                <div style="color: #667eea; font-weight: 700; font-size: 1.5em;" id="flowIncome">R$ 0</div>
                            </div>
                        </div>

                        <div style="text-align: center; font-size: 2em; color: #667eea; margin: 20px 0;">⬇️</div>

                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px;">
                            <div class="flow-box">
                                <div style="font-size: 1.5em; margin-bottom: 8px;">🏠</div>
                                <div style="font-weight: 600; margin-bottom: 5px;">Essenciais</div>
                                <div style="color: #3b82f6; font-weight: 700; font-size: 1.2em;" id="flowEssenciais">R$ 0</div>
                                <div style="font-size: 0.85em; color: #718096; margin-top: 5px;" id="flowEssenciaisPercent">0%</div>
                            </div>

                            <div class="flow-box">
                                <div style="font-size: 1.5em; margin-bottom: 8px;">🎉</div>
                                <div style="font-weight: 600; margin-bottom: 5px;">Liberdade</div>
                                <div style="color: #10b981; font-weight: 700; font-size: 1.2em;" id="flowLiberdade">R$ 0</div>
                                <div style="font-size: 0.85em; color: #718096; margin-top: 5px;" id="flowLiberdadePercent">0%</div>
                            </div>

                            <div class="flow-box">
                                <div style="font-size: 1.5em; margin-bottom: 8px;">🎯</div>
                                <div style="font-weight: 600; margin-bottom: 5px;">Sonhos</div>
                                <div style="color: #f59e0b; font-weight: 700; font-size: 1.2em;" id="flowSonhos">R$ 0</div>
                                <div style="font-size: 0.85em; color: #718096; margin-top: 5px;" id="flowSonhosPercent">0%</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="success-box">
                    <p><strong>✅ Próximos passos práticos:</strong></p>
                    <p>1. Configure transferências automáticas no seu banco</p>
                    <p>2. Programe as transferências para logo após receber sua renda</p>
                    <p>3. Mantenha esta estrutura por pelo menos 3 meses antes de ajustar</p>
                </div>

                <div class="download-section">
                    <h3 style="margin-bottom: 20px; color: #2d3748;">✅ Sistema Configurado!</h3>
                    <p style="color: #718096; margin-bottom: 30px;">Visualize e salve seu Mapa de Fluxo Financeiro</p>
                    <button class="download-button" onclick="showPrintView()">
                        📄 Ver Relatório Completo
                    </button>
                </div>

                <div class="navigation">
                    <button class="nav-button secondary" onclick="prevStep()">
                        ← Voltar
                    </button>
                    <button class="nav-button primary" onclick="restart()">
                        🔄 Reconfigurar Sistema
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Visualização para Impressão -->
    <div class="print-view" id="printView">
        <div class="print-buttons">
            <button class="print-btn print-btn-primary" onclick="printReport()">🖨️ Imprimir/Salvar PDF</button>
            <button class="print-btn print-btn-secondary" onclick="closePrintView()">✕ Fechar</button>
        </div>
        <div class="print-content" id="printContent">
            <!-- Conteúdo será gerado dinamicamente -->
        </div>
    </div>

    <script>
        // Estado da aplicação
        let currentStep = 1;
        let data = {
            accounts: [],
            monthlyIncome: 0,
            percentages: {
                essenciais: 50,
                liberdade: 30,
                sonhos: 20
            },
            configuration: {
                contaEssenciais: '',
                contaLiberdade: '',
                contaSonhos: ''
            }
        };

        // Inicialização
        document.addEventListener('DOMContentLoaded', function() {
            loadFromLocalStorage();
            updateProgressBar();
            renderAccounts();
            calculateValues();
        });

        // Navegação
        function nextStep() {
            if (validateStep(currentStep)) {
                currentStep++;
                showStep(currentStep);
                updateProgressBar();
                saveToLocalStorage();
                
                if (currentStep === 3) {
                    updatePercentages();
                } else if (currentStep === 4) {
                    populateAccountSelects();
                    updateFlowDiagram();
                }
            }
        }

        function prevStep() {
            if (currentStep > 1) {
                currentStep--;
                showStep(currentStep);
                updateProgressBar();
            }
        }

        function showStep(step) {
            document.querySelectorAll('.step').forEach(s => s.classList.remove('active'));
            document.getElementById(`step${step}`).classList.add('active');
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        function updateProgressBar() {
            const totalSteps = 4;
            const progress = ((currentStep - 1) / (totalSteps - 1)) * 100;
            document.getElementById('progressFill').style.width = progress + '%';

            document.querySelectorAll('.progress-step').forEach((step, index) => {
                step.classList.remove('active', 'completed');
                if (index + 1 < currentStep) {
                    step.classList.add('completed');
                } else if (index + 1 === currentStep) {
                    step.classList.add('active');
                }
            });
        }

        function validateStep(step) {
            if (step === 1) {
                if (data.accounts.length === 0) {
                    alert('⚠️ Por favor, adicione pelo menos uma conta bancária.');
                    return false;
                }
                
                const emptyAccounts = data.accounts.filter(acc => !acc.bank.trim() || !acc.type.trim());
                if (emptyAccounts.length > 0) {
                    alert('⚠️ Por favor, preencha todos os dados das contas adicionadas.');
                    return false;
                }
            } else if (step === 2) {
                if (!data.monthlyIncome || data.monthlyIncome <= 0) {
                    alert('⚠️ Por favor, informe sua renda mensal.');
                    return false;
                }
            }
            return true;
        }

        // Gerenciamento de contas
        function addAccount() {
            const id = Date.now();
            data.accounts.push({ 
                id, 
                bank: '', 
                type: '',
                hasAutomaticTransfer: false
            });
            renderAccounts();
            saveToLocalStorage();
        }

        function removeAccount(id) {
            data.accounts = data.accounts.filter(acc => acc.id !== id);
            renderAccounts();
            saveToLocalStorage();
        }

        function updateAccount(id, field, value) {
            const account = data.accounts.find(acc => acc.id === id);
            if (account) {
                account[field] = value;
                saveToLocalStorage();
            }
        }

        function renderAccounts() {
            const container = document.getElementById('accountsContainer');
            if (data.accounts.length === 0) {
                container.innerHTML = '<p style="color: #718096; text-align: center; padding: 20px;">Nenhuma conta adicionada ainda</p>';
                return;
            }

            container.innerHTML = data.accounts.map(account => `
                <div class="account-item">
                    <button class="remove-button" onclick="removeAccount(${account.id})">✕</button>
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 15px;">
                        <div class="input-group">
                            <label>Banco/Instituição</label>
                            <input type="text" 
                                   placeholder="Ex: Banco do Brasil, Nubank, Caixa..."
                                   value="${account.bank}"
                                   onchange="updateAccount(${account.id}, 'bank', this.value)">
                        </div>
                        <div class="input-group">
                            <label>Tipo de Conta</label>
                            <select onchange="updateAccount(${account.id}, 'type', this.value)">
                                <option value="">Selecione...</option>
                                <option value="Conta Corrente" ${account.type === 'Conta Corrente' ? 'selected' : ''}>Conta Corrente</option>
                                <option value="Conta Poupança" ${account.type === 'Conta Poupança' ? 'selected' : ''}>Conta Poupança</option>
                                <option value="Conta Digital" ${account.type === 'Conta Digital' ? 'selected' : ''}>Conta Digital</option>
                                <option value="Conta Salário" ${account.type === 'Conta Salário' ? 'selected' : ''}>Conta Salário</option>
                            </select>
                        </div>
                    </div>
                    <div class="input-group">
                        <label>
                            <input type="checkbox" 
                                   ${account.hasAutomaticTransfer ? 'checked' : ''}
                                   onchange="updateAccount(${account.id}, 'hasAutomaticTransfer', this.checked)"
                                   style="width: auto; margin-right: 8px;">
                            Esta conta permite transferências automáticas
                        </label>
                    </div>
                </div>
            `).join('');
        }

        // Cálculos
        function calculateValues() {
            const income = parseFloat(document.getElementById('monthlyIncome')?.value) || 0;
            data.monthlyIncome = income;

            if (income > 0) {
                document.getElementById('incomeWarning').innerHTML = `
                    <div class="success-box">
                        <p><strong>✓ Renda definida:</strong> R$ ${income.toLocaleString('pt-BR', {minimumFractionDigits: 2})}</p>
                    </div>
                `;
            } else {
                document.getElementById('incomeWarning').innerHTML = '';
            }

            updatePercentages();
            saveToLocalStorage();
        }

        function updatePercentages() {
            const essenciais = parseInt(document.getElementById('essenciaisSlider')?.value) || 50;
            const liberdade = parseInt(document.getElementById('liberdadeSlider')?.value) || 30;
            const sonhos = parseInt(document.getElementById('sonhosSlider')?.value) || 20;

            const total = essenciais + liberdade + sonhos;

            // Atualizar valores exibidos
            document.getElementById('essenciaisValue').textContent = essenciais + '%';
            document.getElementById('liberdadeValue').textContent = liberdade + '%';
            document.getElementById('sonhosValue').textContent = sonhos + '%';

            // Validar total
            const warningDiv = document.getElementById('percentageWarning');
            if (total !== 100) {
                warningDiv.innerHTML = `
                    <div class="warning-box">
                        <p><strong>⚠️ Atenção:</strong> A soma dos percentuais está em ${total}%. Ajuste para totalizar exatamente 100%.</p>
                    </div>
                `;
            } else {
                warningDiv.innerHTML = `
                    <div class="success-box">
                        <p><strong>✓ Perfeito:</strong> A distribuição está balanceada em 100%!</p>
                    </div>
                `;
            }

            data.percentages = { essenciais, liberdade, sonhos };

            // Atualizar visualização das contas
            const income = data.monthlyIncome || 0;
            const visualContainer = document.getElementById('accountsVisual');
            
            if (visualContainer && income > 0) {
                const valorEssenciais = (income * essenciais / 100);
                const valorLiberdade = (income * liberdade / 100);
                const valorSonhos = (income * sonhos / 100);

                visualContainer.innerHTML = `
                    <div class="account-card essenciais">
                        <div class="account-icon">🏠</div>
                        <div class="account-name">Essenciais</div>
                        <div class="account-percentage">${essenciais}%</div>
                        <div class="account-value">R$ ${valorEssenciais.toLocaleString('pt-BR', {minimumFractionDigits: 2})}</div>
                        <div class="account-description">Despesas fixas, contas, moradia, alimentação básica</div>
                    </div>

                    <div class="account-card liberdade">
                        <div class="account-icon">🎉</div>
                        <div class="account-name">Liberdade</div>
                        <div class="account-percentage">${liberdade}%</div>
                        <div class="account-value">R$ ${valorLiberdade.toLocaleString('pt-BR', {minimumFractionDigits: 2})}</div>
                        <div class="account-description">Lazer, refeições fora, compras não essenciais</div>
                    </div>

                    <div class="account-card sonhos">
                        <div class="account-icon">🎯</div>
                        <div class="account-name">Sonhos</div>
                        <div class="account-percentage">${sonhos}%</div>
                        <div class="account-value">R$ ${valorSonhos.toLocaleString('pt-BR', {minimumFractionDigits: 2})}</div>
                        <div class="account-description">Investimentos e realização dos seus objetivos</div>
                    </div>
                `;
            }

            updateFlowDiagram();
            saveToLocalStorage();
        }

        function populateAccountSelects() {
            const selects = ['contaEssenciais', 'contaLiberdade', 'contaSonhos'];
            
            selects.forEach(selectId => {
                const select = document.getElementById(selectId);
                if (!select) return;

                const currentValue = data.configuration[selectId];
                
                select.innerHTML = '<option value="">Selecione uma conta...</option>' +
                    data.accounts.map(acc => 
                        `<option value="${acc.id}" ${currentValue == acc.id ? 'selected' : ''}>
                            ${acc.bank} - ${acc.type}
                        </option>`
                    ).join('');
            });
        }

        function saveConfiguration() {
            data.configuration.contaEssenciais = document.getElementById('contaEssenciais')?.value || '';
            data.configuration.contaLiberdade = document.getElementById('contaLiberdade')?.value || '';
            data.configuration.contaSonhos = document.getElementById('contaSonhos')?.value || '';
            
            saveToLocalStorage();
        }

        function updateFlowDiagram() {
            const income = data.monthlyIncome || 0;
            const { essenciais, liberdade, sonhos } = data.percentages;

            document.getElementById('flowIncome').textContent = 
                `R$ ${income.toLocaleString('pt-BR', {minimumFractionDigits: 2})}`;
            
            document.getElementById('flowEssenciais').textContent = 
                `R$ ${(income * essenciais / 100).toLocaleString('pt-BR', {minimumFractionDigits: 2})}`;
            document.getElementById('flowEssenciaisPercent').textContent = `${essenciais}%`;
            
            document.getElementById('flowLiberdade').textContent = 
                `R$ ${(income * liberdade / 100).toLocaleString('pt-BR', {minimumFractionDigits: 2})}`;
            document.getElementById('flowLiberdadePercent').textContent = `${liberdade}%`;
            
            document.getElementById('flowSonhos').textContent = 
                `R$ ${(income * sonhos / 100).toLocaleString('pt-BR', {minimumFractionDigits: 2})}`;
            document.getElementById('flowSonhosPercent').textContent = `${sonhos}%`;
        }

        // Relatório para impressão
        function showPrintView() {
            const printContent = document.getElementById('printContent');
            const income = data.monthlyIncome;
            const { essenciais, liberdade, sonhos } = data.percentages;

            const getAccountName = (id) => {
                const acc = data.accounts.find(a => a.id == id);
                return acc ? `${acc.bank} - ${acc.type}` : 'Não atribuída';
            };

            let html = `
                <div class="print-header">
                    <h1 style="font-size: 2.5em; margin-bottom: 10px;">🏦 Meu Sistema de 3 Contas</h1>
                    <p style="font-size: 1.2em; opacity: 0.95;">Revolução Financeira em 30 Dias</p>
                    <p style="font-size: 0.9em; opacity: 0.8; margin-top: 10px;">${new Date().toLocaleDateString('pt-BR', { year: 'numeric', month: 'long', day: 'numeric' })}</p>
                </div>

                <div style="background: #f8f9fa; padding: 30px; border-radius: 12px; margin-bottom: 30px;">
                    <h2 style="color: #667eea; margin-bottom: 20px; font-size: 1.8em;">💰 Minha Renda Mensal</h2>
                    <p style="font-size: 2em; font-weight: 700; color: #2d3748; text-align: center;">
                        R$ ${income.toLocaleString('pt-BR', {minimumFractionDigits: 2})}
                    </p>
                </div>

                <div style="background: #f8f9fa; padding: 30px; border-radius: 12px; margin-bottom: 30px;">
                    <h2 style="color: #667eea; margin-bottom: 20px; font-size: 1.8em;">📊 Distribuição Configurada</h2>
                    
                    <div style="margin-bottom: 25px; padding: 20px; background: white; border-radius: 8px; border-left: 4px solid #3b82f6;">
                        <h3 style="color: #3b82f6; margin-bottom: 10px; font-size: 1.3em;">🏠 Conta Essenciais</h3>
                        <p style="color: #4a5568; margin: 5px 0;"><strong>Percentual:</strong> ${essenciais}%</p>
                        <p style="color: #4a5568; margin: 5px 0;"><strong>Valor Mensal:</strong> R$ ${(income * essenciais / 100).toLocaleString('pt-BR', {minimumFractionDigits: 2})}</p>
                        <p style="color: #4a5568; margin: 5px 0;"><strong>Conta Atribuída:</strong> ${getAccountName(data.configuration.contaEssenciais)}</p>
                        <p style="color: #718096; margin-top: 10px; font-size: 0.9em;">Destinada a despesas fixas, moradia, contas e compromissos recorrentes.</p>
                    </div>

                    <div style="margin-bottom: 25px; padding: 20px; background: white; border-radius: 8px; border-left: 4px solid #10b981;">
                        <h3 style="color: #10b981; margin-bottom: 10px; font-size: 1.3em;">🎉 Conta Liberdade</h3>
                        <p style="color: #4a5568; margin: 5px 0;"><strong>Percentual:</strong> ${liberdade}%</p>
                        <p style="color: #4a5568; margin: 5px 0;"><strong>Valor Mensal:</strong> R$ ${(income * liberdade / 100).toLocaleString('pt-BR', {minimumFractionDigits: 2})}</p>
                        <p style="color: #4a5568; margin: 5px 0;"><strong>Conta Atribuída:</strong> ${getAccountName(data.configuration.contaLiberdade)}</p>
                        <p style="color: #718096; margin-top: 10px; font-size: 0.9em;">Destinada a lazer, refeições fora, compras não essenciais e pequenos prazeres.</p>
                    </div>

                    <div style="margin-bottom: 25px; padding: 20px; background: white; border-radius: 8px; border-left: 4px solid #f59e0b;">
                        <h3 style="color: #f59e0b; margin-bottom: 10px; font-size: 1.3em;">🎯 Conta Sonhos</h3>
                        <p style="color: #4a5568; margin: 5px 0;"><strong>Percentual:</strong> ${sonhos}%</p>
                        <p style="color: #4a5568; margin: 5px 0;"><strong>Valor Mensal:</strong> R$ ${(income * sonhos / 100).toLocaleString('pt-BR', {minimumFractionDigits: 2})}</p>
                        <p style="color: #4a5568; margin: 5px 0;"><strong>Conta Atribuída:</strong> ${getAccountName(data.configuration.contaSonhos)}</p>
                        <p style="color: #718096; margin-top: 10px; font-size: 0.9em;">Destinada exclusivamente aos seus sonhos e investimentos de longo prazo.</p>
                    </div>
                </div>

                <div style="background: #e0e7ff; padding: 25px; border-radius: 12px; border-left: 4px solid #667eea; margin-bottom: 30px;">
                    <h2 style="color: #667eea; margin-bottom: 15px; font-size: 1.5em;">✅ Próximos Passos Práticos</h2>
                    <ol style="color: #4c51bf; line-height: 2; padding-left: 20px;">
                        <li>Configure transferências automáticas no seu banco</li>
                        <li>Programe as transferências para logo após receber sua renda</li>
                        <li>Configure débitos automáticos das contas essenciais</li>
                        <li>Use apenas o cartão da Conta Liberdade no dia a dia</li>
                        <li>Mantenha a Conta Sonhos intocável (exceto para realizar sonhos)</li>
                        <li>Revise o sistema após 3 meses e ajuste se necessário</li>
                    </ol>
                </div>

                <div style="background: #f8f9fa; padding: 25px; border-radius: 12px; margin-bottom: 30px;">
                    <h2 style="color: #667eea; margin-bottom: 15px; font-size: 1.5em;">💡 Lembre-se</h2>
                    <p style="color: #4a5568; line-height: 1.8; margin-bottom: 10px;">
                        <strong>O princípio da decisão única:</strong> Uma decisão estrutural elimina a necessidade de centenas de decisões diárias.
                    </p>
                    <p style="color: #4a5568; line-height: 1.8;">
                        <strong>A fórmula correta:</strong> Renda - Investimentos = Gastos (não o contrário!)
                    </p>
                </div>

                <div style="text-align: center; margin-top: 40px; padding-top: 30px; border-top: 2px solid #e9ecef; color: #718096;">
                    <p style="font-size: 1.1em; margin-bottom: 15px;"><strong>💪 Parabéns!</strong></p>
                    <p style="margin-bottom: 10px;">Você configurou sua arquitetura financeira para o sucesso automático!</p>
                    <p style="font-size: 0.9em; margin-top: 20px; color: #667eea;"><strong>Revolução Financeira em 30 Dias</strong></p>
                    <p style="font-size: 0.9em; color: #667eea;"><strong>Fernando Martins</strong></p>
                    <p style="font-size: 0.85em; color: #667eea;">Consultor Financeiro</p>
                </div>
            `;

            printContent.innerHTML = html;
            document.getElementById('printView').classList.add('active');
            document.body.style.overflow = 'hidden';
        }

        function closePrintView() {
            document.getElementById('printView').classList.remove('active');
            document.body.style.overflow = 'auto';
        }

        function printReport() {
            window.print();
        }

        // LocalStorage
        function saveToLocalStorage() {
            localStorage.setItem('sistema3contas', JSON.stringify(data));
        }

        function loadFromLocalStorage() {
            const saved = localStorage.getItem('sistema3contas');
            if (saved) {
                data = JSON.parse(saved);
                renderAccounts();
                
                if (data.monthlyIncome > 0) {
                    const incomeInput = document.getElementById('monthlyIncome');
                    if (incomeInput) incomeInput.value = data.monthlyIncome;
                }
                
                if (data.percentages) {
                    const essenciaisSlider = document.getElementById('essenciaisSlider');
                    const liberdadeSlider = document.getElementById('liberdadeSlider');
                    const sonhosSlider = document.getElementById('sonhosSlider');
                    
                    if (essenciaisSlider) essenciaisSlider.value = data.percentages.essenciais;
                    if (liberdadeSlider) liberdadeSlider.value = data.percentages.liberdade;
                    if (sonhosSlider) sonhosSlider.value = data.percentages.sonhos;
                }
            }
        }

        function restart() {
            if (confirm('Tem certeza que deseja reconfigurar o sistema? Os dados atuais serão perdidos.')) {
                localStorage.removeItem('sistema3contas');
                location.reload();
            }
        }
    </script>
</body>
</html>
